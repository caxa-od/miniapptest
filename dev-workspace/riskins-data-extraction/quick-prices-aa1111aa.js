/**
 * –ë–´–°–¢–†–û–ï –ü–û–õ–£–ß–ï–ù–ò–ï –¶–ï–ù –î–õ–Ø AA1111AA –í –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ú –†–ï–ñ–ò–ú–ï
 */

const RiskinsAPI = require('./riskins-api.js');

async function getQuickPricesAA1111AA() {
    console.log('üîç –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ü–û–õ–£–ß–ï–ù–ò–ï –¶–ï–ù –î–õ–Ø AA1111AA');
    console.log('=' .repeat(50));
    console.log('ü§ñ –§–æ–Ω–æ–≤—ã–π —Ä–µ–∂–∏–º - –±—Ä–∞—É–∑–µ—Ä –Ω–µ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è');
    console.log('üìÖ –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: 12 –º–µ—Å—è—Ü–µ–≤\n');
    
    const api = new RiskinsAPI();
    const vehicleNumber = 'AA1111AA';
    
    try {
        console.log(`üöó –ù–æ–º–µ—Ä: ${vehicleNumber}`);
        console.log('‚è≥ –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ...');
        
        const result = await api.getInsuranceQuotes(vehicleNumber);
        
        if (!result.success) {
            console.error('‚ùå –û—à–∏–±–∫–∞:', result.error);
            return null;
        }
        
        const quotes = result.offers || [];
        
        console.log(`\n‚úÖ –ù–∞–π–¥–µ–Ω–æ ${quotes.length} –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π:`);
        console.log('=' .repeat(40));
        
        quotes.forEach((quote, i) => {
            let priceInfo = `${quote.price}‚Ç¥`;
            if (quote.oldPrice && quote.oldPrice > quote.price) {
                priceInfo += ` (–±—ã–ª–æ ${quote.oldPrice}‚Ç¥)`;
            }
            if (quote.discount) {
                priceInfo += ` [-${quote.discount}%]`;
            }
            console.log(`${i+1}. ${quote.companyName}: ${priceInfo}`);
        });
        
        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        const prices = quotes.map(q => q.price).sort((a, b) => a - b);
        const avgPrice = Math.round(prices.reduce((a, b) => a + b, 0) / prices.length);
        
        console.log('\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
        console.log(`   üí∞ –°–∞–º–∞—è –¥–µ—à–µ–≤–∞—è: ${Math.min(...prices)}‚Ç¥`);
        console.log(`   üí∏ –°–∞–º–∞—è –¥–æ—Ä–æ–≥–∞—è: ${Math.max(...prices)}‚Ç¥`);
        console.log(`   üìà –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞: ${avgPrice}‚Ç¥`);
        console.log(`   üìä –î–∏–∞–ø–∞–∑–æ–Ω: ${Math.max(...prices) - Math.min(...prices)}‚Ç¥`);
        
        // –õ—É—á—à–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
        const cheapest = quotes.reduce((min, quote) => 
            quote.price < min.price ? quote : min
        );
        
        console.log('\nüèÜ –õ–£–ß–®–ï–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï:');
        console.log(`   üéØ ${cheapest.companyName}`);
        console.log(`   üí∞ –¶–µ–Ω–∞: ${cheapest.price}‚Ç¥`);
        if (cheapest.discount) {
            console.log(`   üéÅ –°–∫–∏–¥–∫–∞: ${cheapest.discount}%`);
        }
        
        return {
            vehicleNumber,
            period: '12 –º–µ—Å—è—Ü–µ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)',
            totalOffers: quotes.length,
            prices: prices,
            avgPrice,
            cheapest: {
                company: cheapest.companyName,
                price: cheapest.price,
                discount: cheapest.discount
            },
            allOffers: quotes
        };
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', error.message);
        return null;
    }
}

// –ó–∞–ø—É—Å–∫
if (require.main === module) {
    getQuickPricesAA1111AA()
        .then((result) => {
            if (result) {
                console.log('\nüéâ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
                console.log('üí° –≠—Ç–æ —Ü–µ–Ω—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–æ–±—ã—á–Ω–æ 12 –º–µ—Å—è—Ü–µ–≤)');
                console.log('üìù –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–µ–Ω –Ω–∞ 6 –º–µ—Å—è—Ü–µ–≤ –Ω—É–∂–µ–Ω —Ä—É—á–Ω–æ–π –≤—ã–±–æ—Ä –ø–µ—Ä–∏–æ–¥–∞');
            }
            process.exit(0);
        })
        .catch(error => {
            console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
            process.exit(1);
        });
}

module.exports = { getQuickPricesAA1111AA };
