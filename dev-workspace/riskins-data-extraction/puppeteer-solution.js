/**
 * –†–µ—à–µ–Ω–∏–µ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ Riskins Insurance —Å –ø–æ–º–æ—â—å—é Puppeteer
 * –ü–æ—Å–∫–æ–ª—å–∫—É API –∑–∞–∫—Ä—ã—Ç—ã–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é –±—Ä–∞—É–∑–µ—Ä–∞
 */

const puppeteer = require('puppeteer');

class RiskinsDataExtractor {
    constructor(options = {}) {
        this.baseUrl = 'https://riskins-insurance.eua.in.ua/';
        this.options = {
            headless: true,
            timeout: 30000,
            ...options
        };
    }

    async getInsuranceOffers(vehicleNumber, period = '12') {
        let browser;
        try {
            browser = await puppeteer.launch({
                headless: this.options.headless,
                args: ['--no-sandbox', '--disable-setuid-sandbox']
            });

            const page = await browser.newPage();
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            await page.setUserAgent('Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36');
            await page.setViewport({ width: 1366, height: 768 });

            console.log('üöÄ –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É Riskins...');
            await page.goto(this.baseUrl, { waitUntil: 'networkidle2' });

            // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É
            console.log('üìù –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É...');
            await this.fillForm(page, vehicleNumber, period);

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É –∏ –∂–¥–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            console.log('üîç –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É...');
            await this.submitForm(page);

            // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–µ—Ä–≤—É—é –ø–æ—Ä—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö
            console.log('üìä –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ...');
            let allOffers = await this.extractOffers(page);

            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é
            console.log('üìÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é...');
            const additionalOffers = await this.handlePagination(page);
            allOffers = [...allOffers, ...additionalOffers];

            console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${allOffers.length} –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π`);
            return {
                success: true,
                offers: allOffers,
                vehicleNumber,
                timestamp: new Date().toISOString(),
                totalOffers: allOffers.length
            };

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
            return {
                success: false,
                error: error.message,
                timestamp: new Date().toISOString()
            };
        } finally {
            if (browser) {
                await browser.close();
            }
        }
    }

    async fillForm(page, vehicleNumber, period) {
        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ä–º—ã (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã)
        await page.waitForSelector('#autoNumberSearch', { timeout: 10000 });

        // –ó–∞–ø–æ–ª–Ω—è–µ–º –Ω–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª—è
        await page.type('#autoNumberSearch', vehicleNumber);

        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ä–º—ã
        await page.waitForTimeout(1000);
    }

    async submitForm(page) {
        // –ò—â–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã)
        const submitButton = await page.$('#btnCalculateNumber, #btnCalculateSearch');
        if (!submitButton) {
            throw new Error('–ö–Ω–æ–ø–∫–∞ "–†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }

        // –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É
        await submitButton.click();

        // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        await page.waitForSelector('.insurance-offer, .offer-item, .result-item', { 
            timeout: 15000 
        });

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        await page.waitForTimeout(2000);
    }

    async extractOffers(page) {
        return await page.evaluate(() => {
            const offers = [];
            
            // –ò—â–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏ (–∞–¥–∞–ø—Ç–∏—Ä—É–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –ø–æ–¥ —Ä–µ–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É)
            const offerElements = document.querySelectorAll('.insurance-offer, .offer-item, .result-item, .company-offer');
            
            offerElements.forEach((element, index) => {
                try {
                    // –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏
                    const companyName = element.querySelector('.company-name, .insurer-name, h3, .title')?.textContent?.trim() || `Company_${index + 1}`;
                    
                    // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ü–µ–Ω—É
                    const priceElement = element.querySelector('.price, .cost, .amount');
                    const priceText = priceElement?.textContent?.trim() || '';
                    const price = parseInt(priceText.replace(/[^\d]/g, '')) || 0;
                    
                    // –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—Ç–∞—Ä—É—é —Ü–µ–Ω—É (–µ—Å–ª–∏ –µ—Å—Ç—å —Å–∫–∏–¥–∫–∞)
                    const oldPriceElement = element.querySelector('.old-price, .original-price, .was-price');
                    const oldPrice = oldPriceElement ? parseInt(oldPriceElement.textContent.replace(/[^\d]/g, '')) : null;
                    
                    // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ä–µ–π—Ç–∏–Ω–≥
                    const ratingElement = element.querySelector('.rating, .stars');
                    let rating = 5; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
                    if (ratingElement) {
                        const ratingText = ratingElement.textContent;
                        const ratingMatch = ratingText.match(/(\d+)/);
                        rating = ratingMatch ? parseInt(ratingMatch[1]) : 5;
                    }
                    
                    // –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—Ç–∞—Ç—É—Å
                    const statusElement = element.querySelector('.status, .conditions, .terms');
                    const status = statusElement?.textContent?.trim() || '–ë–µ–∑ –æ–±–º–µ–∂–µ–Ω—å';
                    
                    // –ò–∑–≤–ª–µ–∫–∞–µ–º –ª–æ–≥–æ—Ç–∏–ø
                    const logoElement = element.querySelector('img');
                    const logo = logoElement?.src || '';
                    
                    // –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–∫—É–ø–∫—É
                    const buyElement = element.querySelector('a[href*="buy"], .buy-btn, .purchase-btn');
                    const buyUrl = buyElement?.href || '';

                    offers.push({
                        id: `offer_${index + 1}`,
                        companyName,
                        logo,
                        price,
                        oldPrice,
                        currency: '–≥—Ä–Ω',
                        rating,
                        status,
                        features: [],
                        buyUrl,
                        rawElement: element.outerHTML.substring(0, 200) // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
                    });
                } catch (error) {
                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:', error);
                }
            });
            
            return offers;
        });
    }

    async handlePagination(page) {
        const additionalOffers = [];
        
        try {
            // –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–∫–∞–∑–∞—Ç—å –±–æ–ª—å—à–µ"
            const moreButton = await page.$('.show-more, .load-more, button:contains("–±—ñ–ª—å—à–µ")');
            
            if (moreButton) {
                console.log('üîÑ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ü–æ–∫–∞–∑–∞—Ç—å –±–æ–ª—å—à–µ", –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è...');
                
                // –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É
                await moreButton.click();
                
                // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
                await page.waitForTimeout(3000);
                
                // –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Å–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∑–∞–Ω–æ–≤–æ –∏ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤—ã–≤–∞–µ–º –Ω–æ–≤—ã–µ
                const allOffersAfterClick = await this.extractOffers(page);
                
                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è (–ø—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞)
                // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –ª—É—á—à–µ —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å –ø–æ ID –∏–ª–∏ –¥—Ä—É–≥–∏–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –ø–æ–ª—è–º
                return allOffersAfterClick.slice(5); // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –ø–µ—Ä–≤—ã–µ 5 —É–∂–µ –±—ã–ª–∏
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏:', error);
        }
        
        return additionalOffers;
    }
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
async function example() {
    const extractor = new RiskinsDataExtractor({
        headless: false // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
    });
    
    const result = await extractor.getInsuranceOffers('AB1234CD');
    console.log(JSON.stringify(result, null, 2));
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
module.exports = RiskinsDataExtractor;

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–∞, –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
    example();
}
