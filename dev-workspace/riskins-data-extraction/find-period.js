/**
 * –í–ò–ó–£–ê–õ–¨–ù–´–ô –ü–û–ò–°–ö –°–ï–õ–ï–ö–¢–û–†–ê –ü–ï–†–ò–û–î–ê –°–¢–†–ê–•–û–í–ê–ù–ò–Ø
 */

const puppeteer = require('puppeteer');

async function findPeriodSelector() {
    console.log('üîç –ü–û–ò–°–ö –°–ï–õ–ï–ö–¢–û–†–ê –ü–ï–†–ò–û–î–ê –°–¢–†–ê–•–û–í–ê–ù–ò–Ø');
    console.log('‚ïê'.repeat(50));

    const browser = await puppeteer.launch({
        headless: false, // –í–ò–ó–£–ê–õ–¨–ù–´–ô —Ä–µ–∂–∏–º
        args: ['--no-sandbox', '--disable-setuid-sandbox'],
        defaultViewport: null
    });

    const page = await browser.newPage();
    await page.setUserAgent('Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36');

    try {
        console.log('üöÄ –û—Ç–∫—Ä—ã–≤–∞–µ–º Riskins Insurance...');
        await page.goto('https://riskins-insurance.eua.in.ua/', { 
            waitUntil: 'networkidle2' 
        });

        console.log('üìù –ó–∞–ø–æ–ª–Ω—è–µ–º –Ω–æ–º–µ—Ä AA1234AA...');
        await page.waitForSelector('#autoNumberSearch', { timeout: 10000 });
        await page.click('#autoNumberSearch');
        await page.keyboard.down('Meta');
        await page.keyboard.press('KeyA');
        await page.keyboard.up('Meta');
        await page.type('#autoNumberSearch', 'AA1234AA');

        console.log('üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã...');
        
        // –ò—â–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –∏ –ø–æ–ª—è
        const allFormElements = await page.evaluate(() => {
            const elements = [];
            
            // –ò—â–µ–º –≤—Å–µ select —ç–ª–µ–º–µ–Ω—Ç—ã
            const selects = document.querySelectorAll('select');
            selects.forEach((el, i) => {
                elements.push({
                    type: 'select',
                    index: i,
                    id: el.id,
                    name: el.name,
                    className: el.className,
                    options: Array.from(el.options).map(opt => ({
                        value: opt.value,
                        text: opt.textContent.trim()
                    })),
                    outerHTML: el.outerHTML.substring(0, 200)
                });
            });

            // –ò—â–µ–º –≤—Å–µ input —ç–ª–µ–º–µ–Ω—Ç—ã
            const inputs = document.querySelectorAll('input[type="radio"], input[type="checkbox"]');
            inputs.forEach((el, i) => {
                const label = el.closest('label') || document.querySelector(`label[for="${el.id}"]`);
                elements.push({
                    type: 'input',
                    inputType: el.type,
                    index: i,
                    id: el.id,
                    name: el.name,
                    value: el.value,
                    labelText: label ? label.textContent.trim() : '',
                    outerHTML: el.outerHTML.substring(0, 200)
                });
            });

            // –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å —Ç–µ–∫—Å—Ç–æ–º –ø—Ä–æ –ø–µ—Ä–∏–æ–¥/–º–µ—Å—è—Ü/—Å—Ä–æ–∫
            const allElements = document.querySelectorAll('*');
            allElements.forEach(el => {
                const text = el.textContent.toLowerCase();
                if ((text.includes('–º–µ—Å—è—Ü') || text.includes('—Å—Ä–æ–∫') || text.includes('–ø–µ—Ä–∏–æ–¥') || 
                     text.includes('6') || text.includes('12')) && 
                    el.children.length === 0 && text.length < 100) {
                    elements.push({
                        type: 'text',
                        tagName: el.tagName,
                        className: el.className,
                        text: el.textContent.trim(),
                        outerHTML: el.outerHTML.substring(0, 200)
                    });
                }
            });

            return elements;
        });

        console.log('\nüìã –ù–ê–ô–î–ï–ù–ù–´–ï –≠–õ–ï–ú–ï–ù–¢–´ –§–û–†–ú–´:');
        console.log('‚îÄ'.repeat(50));

        // –í—ã–≤–æ–¥–∏–º select —ç–ª–µ–º–µ–Ω—Ç—ã
        const selects = allFormElements.filter(el => el.type === 'select');
        if (selects.length > 0) {
            console.log('\nüéõÔ∏è SELECT –≠–õ–ï–ú–ï–ù–¢–´:');
            selects.forEach((sel, i) => {
                console.log(`${i + 1}. #${sel.id || 'no-id'} .${sel.className}`);
                console.log(`   –ò–º—è: ${sel.name || '–Ω–µ—Ç'}`);
                console.log(`   –û–ø—Ü–∏–∏: ${sel.options.map(o => `"${o.text}"`).join(', ')}`);
                console.log('');
            });
        }

        // –í—ã–≤–æ–¥–∏–º radio/checkbox —ç–ª–µ–º–µ–Ω—Ç—ã
        const inputs = allFormElements.filter(el => el.type === 'input');
        if (inputs.length > 0) {
            console.log('\nüìª RADIO/CHECKBOX –≠–õ–ï–ú–ï–ù–¢–´:');
            inputs.forEach((inp, i) => {
                console.log(`${i + 1}. ${inp.inputType} #${inp.id || 'no-id'}`);
                console.log(`   –ò–º—è: ${inp.name || '–Ω–µ—Ç'}`);
                console.log(`   –ó–Ω–∞—á–µ–Ω–∏–µ: ${inp.value || '–Ω–µ—Ç'}`);
                console.log(`   –õ–µ–π–±–ª: "${inp.labelText}"`);
                console.log('');
            });
        }

        // –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
        const textElements = allFormElements.filter(el => el.type === 'text');
        if (textElements.length > 0) {
            console.log('\nüìù –≠–õ–ï–ú–ï–ù–¢–´ –° –ö–õ–Æ–ß–ï–í–´–ú–ò –°–õ–û–í–ê–ú–ò:');
            textElements.slice(0, 10).forEach((txt, i) => {
                console.log(`${i + 1}. ${txt.tagName}.${txt.className}`);
                console.log(`   –¢–µ–∫—Å—Ç: "${txt.text}"`);
                console.log('');
            });
        }

        console.log('\nüéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
        console.log('‚îÄ'.repeat(40));
        console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º—É –≤–∏–∑—É–∞–ª—å–Ω–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
        console.log('2. –ù–∞–π–¥–∏—Ç–µ –ø–æ–ª–µ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è');
        console.log('3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –µ–≥–æ —Å–µ–ª–µ–∫—Ç–æ—Ä –∏–∑ DevTools');
        console.log('4. –í–æ–∑–º–æ–∂–Ω–æ –ø–µ—Ä–∏–æ–¥ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã');
        
        console.log('\nüîç –ë—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞...');
        console.log('‚è∏Ô∏è  –ó–∞–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –≤—Ä—É—á–Ω—É—é –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error);
        await browser.close();
    }

    // –ù–ï –∑–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
}

findPeriodSelector();
