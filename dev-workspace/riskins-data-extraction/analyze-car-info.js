/**
 * –ê–ù–ê–õ–ò–ó–ê–¢–û–† –ò–ù–§–û–†–ú–ê–¶–ò–ò –û–ë –ê–í–¢–û–ú–û–ë–ò–õ–ï
 * –ù–∞—Ö–æ–¥–∏–º –≥–¥–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –º–∞—Ä–∫–∞, –º–æ–¥–µ–ª—å –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
 */

const puppeteer = require('puppeteer');

async function analyzeCarInfo(plateNumber) {
    console.log(`üöó –ê–ù–ê–õ–ò–ó –ò–ù–§–û–†–ú–ê–¶–ò–ò –û–ë –ê–í–¢–û–ú–û–ë–ò–õ–ï`);
    console.log(`–ù–æ–º–µ—Ä: ${plateNumber}`);
    console.log('=' .repeat(50));

    let browser;
    try {
        browser = await puppeteer.launch({
            headless: false, // –í–∏–¥–∏–º—ã–π —Ä–µ–∂–∏–º –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
            args: ['--no-sandbox', '--disable-setuid-sandbox']
        });

        const page = await browser.newPage();
        await page.setViewport({ width: 1366, height: 768 });

        console.log('üåê –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–∞–π—Ç...');
        await page.goto('https://riskins-insurance.eua.in.ua/', { waitUntil: 'networkidle2' });

        console.log('üìù –ó–∞–ø–æ–ª–Ω—è–µ–º –Ω–æ–º–µ—Ä...');
        await page.waitForSelector('#autoNumberSearch', { timeout: 10000 });
        await page.click('#autoNumberSearch');
        await page.keyboard.down('Meta');
        await page.keyboard.press('KeyA');
        await page.keyboard.up('Meta');
        await page.type('#autoNumberSearch', plateNumber);

        console.log('üïí –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–∏–æ–¥ 6 –º–µ—Å—è—Ü–µ–≤...');
        await page.waitForSelector('#coverageTime', { timeout: 10000 });
        await page.click('#coverageTime');
        await page.waitForTimeout(500);
        
        const labels = await page.$$('#coverageTime .Select__option');
        for (const label of labels) {
            const text = await label.evaluate(el => el.textContent.trim());
            if (text === '6 –º—ñ—Å—è—Ü—ñ–≤') {
                await label.click();
                console.log('‚úÖ –í—ã–±—Ä–∞–Ω –ø–µ—Ä–∏–æ–¥: 6 –º–µ—Å—è—Ü–µ–≤');
                break;
            }
        }

        console.log('üîç –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å...');
        await page.click('#btnCalculateNumber');

        console.log('‚è≥ –ñ–¥–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã...');
        await page.waitForSelector('.Table__cell', { timeout: 45000 });
        await page.waitForTimeout(5000);

        console.log('üîç –ò—â–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ...');
        const carInfo = await page.evaluate(() => {
            const results = {
                carInfoElements: [],
                possibleCarInfo: [],
                allRelevantText: []
            };

            // –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ
            const allElements = document.querySelectorAll('*');
            allElements.forEach(el => {
                const text = el.textContent?.trim() || '';
                
                // –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ
                if (text.length > 20 && text.length < 200 && 
                    (text.includes('–ª–µ–≥–∫–æ–≤–∏–π') || 
                     text.includes('–≤–∞–Ω—Ç–∞–∂–Ω–∏–π') ||
                     text.includes('—Å–º3') ||
                     text.includes('MERCEDES') ||
                     text.includes('BMW') ||
                     text.includes('TOYOTA') ||
                     text.includes('VOLKSWAGEN') ||
                     text.includes('–º. –ö–∏—ó–≤') ||
                     text.includes('–£–∫—Ä–∞—ó–Ω–∞') ||
                     text.includes('–∞–≤—Ç–æ–º–æ–±—ñ–ª—å'))) {
                    
                    results.carInfoElements.push({
                        tag: el.tagName,
                        className: el.className,
                        id: el.id,
                        text: text,
                        selector: el.id ? `#${el.id}` : 
                                 el.className ? `.${el.className.split(' ')[0]}` :
                                 el.tagName.toLowerCase()
                    });
                }

                // –ò—â–µ–º —Ç–µ–∫—Å—Ç —Å –º–∞—Ä–∫–æ–π –∞–≤—Ç–æ–º–æ–±–∏–ª—è
                if (text.match(/[A-Z]{2,}\s*[A-Z0-9\s\-]+/) && text.length < 100) {
                    results.possibleCarInfo.push({
                        text: text,
                        tag: el.tagName,
                        className: el.className
                    });
                }

                // –°–æ–±–∏—Ä–∞–µ–º –≤–µ—Å—å —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç
                if (text.includes('—Å–º3') || text.includes('–∞–≤—Ç–æ–º–æ–±—ñ–ª—å') || 
                    text.match(/\d{4}\s*-\s*\d{4}/) || text.includes('–º. –ö–∏—ó–≤')) {
                    results.allRelevantText.push(text);
                }
            });

            // –ò—â–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
            const specificSelectors = [
                '.decor-bottom',
                '.car-info',
                '.vehicle-info', 
                '.auto-info',
                '.result-header',
                '.calculation-info'
            ];

            specificSelectors.forEach(selector => {
                const elements = document.querySelectorAll(selector);
                elements.forEach(el => {
                    const text = el.textContent?.trim();
                    if (text && text.length > 10) {
                        results.carInfoElements.push({
                            selector: selector,
                            text: text,
                            found: true
                        });
                    }
                });
            });

            return results;
        });

        console.log('\nüìã –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–ê–õ–ò–ó–ê:');
        console.log(`–ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –∞–≤—Ç–æ: ${carInfo.carInfoElements.length}`);
        console.log(`–ù–∞–π–¥–µ–Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: ${carInfo.possibleCarInfo.length}`);
        console.log(`–ù–∞–π–¥–µ–Ω–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞: ${carInfo.allRelevantText.length}`);

        if (carInfo.carInfoElements.length > 0) {
            console.log('\nüöó –≠–õ–ï–ú–ï–ù–¢–´ –° –ò–ù–§–û–†–ú–ê–¶–ò–ï–ô –û–ë –ê–í–¢–û–ú–û–ë–ò–õ–ï:');
            carInfo.carInfoElements.forEach((info, i) => {
                console.log(`\n${i + 1}. ${info.selector || info.tag}:`);
                console.log(`   "${info.text}"`);
            });
        }

        if (carInfo.possibleCarInfo.length > 0) {
            console.log('\nüîç –í–û–ó–ú–û–ñ–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ú–ê–†–ö–ï:');
            carInfo.possibleCarInfo.slice(0, 5).forEach((info, i) => {
                console.log(`${i + 1}. "${info.text}"`);
            });
        }

        if (carInfo.allRelevantText.length > 0) {
            console.log('\nüìù –í–ï–°–¨ –†–ï–õ–ï–í–ê–ù–¢–ù–´–ô –¢–ï–ö–°–¢:');
            carInfo.allRelevantText.slice(0, 5).forEach((text, i) => {
                console.log(`${i + 1}. "${text}"`);
            });
        }

        console.log('\n‚è±Ô∏è –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è –Ω–∞–±–ª—é–¥–µ–Ω–∏—è...');
        await page.waitForTimeout(10000);

        return carInfo;

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞:', error.message);
        return null;
    } finally {
        if (browser) {
            await browser.close();
        }
    }
}

// –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞
if (require.main === module) {
    const plateNumber = process.argv[2] || 'AA1111AA';
    
    analyzeCarInfo(plateNumber)
        .then(result => {
            console.log('\nüéâ –ê–ù–ê–õ–ò–ó –ó–ê–í–ï–†–®–ï–ù!');
            if (result) {
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                const fs = require('fs');
                const filename = `car_info_${plateNumber.replace(/[^A-Z0-9]/g, '')}.json`;
                fs.writeFileSync(filename, JSON.stringify(result, null, 2));
                console.log(`üíæ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: ${filename}`);
            }
            process.exit(0);
        })
        .catch(error => {
            console.error('‚ùå –û—à–∏–±–∫–∞:', error);
            process.exit(1);
        });
}

module.exports = { analyzeCarInfo };
