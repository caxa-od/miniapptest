/**
 * –ò–Ω—Å–ø–µ–∫—Ç–æ—Ä –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–∞–π—Ç–∞ Riskins
 */

const puppeteer = require('puppeteer');

async function inspectRiskinsStructure() {
    console.log('üîç –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω—Å–ø–µ–∫—Ç–æ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Riskins...\n');
    
    const browser = await puppeteer.launch({
        headless: false, // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
        devtools: true,  // –û—Ç–∫—Ä—ã–≤–∞–µ–º DevTools
        args: ['--start-maximized']
    });

    const page = await browser.newPage();
    await page.setViewport({ width: 1366, height: 768 });

    console.log('üåê –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É https://riskins-insurance.eua.in.ua/');
    await page.goto('https://riskins-insurance.eua.in.ua/', { 
        waitUntil: 'networkidle2',
        timeout: 30000 
    });

    console.log('‚è±Ô∏è  –î–∞–µ–º 5 —Å–µ–∫—É–Ω–¥ –Ω–∞ –∏–∑—É—á–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
    await page.waitForTimeout(5000);

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ä–º–µ
    console.log('üìã –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–æ—Ä–º—ã...\n');
    
    const formInfo = await page.evaluate(() => {
        const info = {
            forms: [],
            inputs: [],
            buttons: [],
            selects: []
        };

        // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Ñ–æ—Ä–º—ã
        document.querySelectorAll('form').forEach((form, index) => {
            info.forms.push({
                index,
                id: form.id,
                className: form.className,
                action: form.action,
                method: form.method
            });
        });

        // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø–æ–ª—è –≤–≤–æ–¥–∞
        document.querySelectorAll('input').forEach((input, index) => {
            info.inputs.push({
                index,
                type: input.type,
                name: input.name,
                id: input.id,
                className: input.className,
                placeholder: input.placeholder,
                value: input.value
            });
        });

        // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏
        document.querySelectorAll('button, input[type="submit"]').forEach((btn, index) => {
            info.buttons.push({
                index,
                type: btn.type,
                textContent: btn.textContent?.trim(),
                className: btn.className,
                id: btn.id
            });
        });

        // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Å–µ–ª–µ–∫—Ç—ã
        document.querySelectorAll('select').forEach((select, index) => {
            info.selects.push({
                index,
                name: select.name,
                id: select.id,
                className: select.className,
                options: Array.from(select.options).map(opt => ({
                    value: opt.value,
                    text: opt.textContent
                }))
            });
        });

        return info;
    });

    // –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞
    console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–ê–õ–ò–ó–ê:');
    console.log('='.repeat(50));
    
    console.log('\nüè∑Ô∏è  –§–û–†–ú–´:');
    formInfo.forms.forEach(form => {
        console.log(`  ${form.index}: id="${form.id}" class="${form.className}"`);
        console.log(`       action="${form.action}" method="${form.method}"`);
    });

    console.log('\nüìù –ü–û–õ–Ø –í–í–û–î–ê:');
    formInfo.inputs.forEach(input => {
        console.log(`  ${input.index}: type="${input.type}" name="${input.name}"`);
        console.log(`       id="${input.id}" class="${input.className}"`);
        console.log(`       placeholder="${input.placeholder}"`);
    });

    console.log('\nüîò –ö–ù–û–ü–ö–ò:');
    formInfo.buttons.forEach(btn => {
        console.log(`  ${btn.index}: "${btn.textContent}" type="${btn.type}"`);
        console.log(`       class="${btn.className}" id="${btn.id}"`);
    });

    console.log('\nüìä –°–ï–õ–ï–ö–¢–´:');
    formInfo.selects.forEach(select => {
        console.log(`  ${select.index}: name="${select.name}" id="${select.id}"`);
        console.log(`       class="${select.className}"`);
        console.log(`       options: ${select.options.length} —à—Ç—É–∫`);
    });

    console.log('\n' + '='.repeat(50));
    console.log('üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –î–õ–Ø –°–ï–õ–ï–ö–¢–û–†–û–í:');
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
    const recommendations = [];
    
    // –ò—â–µ–º –ø–æ–ª–µ –¥–ª—è –Ω–æ–º–µ—Ä–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
    const vehicleInput = formInfo.inputs.find(input => 
        input.placeholder?.toLowerCase().includes('–Ω–æ–º–µ—Ä') ||
        input.name?.toLowerCase().includes('number') ||
        input.name?.toLowerCase().includes('vehicle') ||
        input.id?.toLowerCase().includes('number')
    );
    
    if (vehicleInput) {
        recommendations.push(`–ù–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª—è: input[name="${vehicleInput.name}"] –∏–ª–∏ #${vehicleInput.id}`);
    } else {
        recommendations.push('–ù–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª—è: –ù–ï –ù–ê–ô–î–ï–ù - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Ä—É—á–Ω—É—é');
    }

    // –ò—â–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏
    const submitBtn = formInfo.buttons.find(btn =>
        btn.type === 'submit' ||
        btn.textContent?.toLowerCase().includes('—Ä–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏') ||
        btn.textContent?.toLowerCase().includes('—Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫') ||
        btn.textContent?.toLowerCase().includes('calculate')
    );
    
    if (submitBtn) {
        recommendations.push(`–ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: button —Å–æ–¥–µ—Ä–∂–∞—â–∞—è "${submitBtn.textContent}"`);
    } else {
        recommendations.push('–ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: –ù–ï –ù–ê–ô–î–ï–ù–ê - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Ä—É—á–Ω—É—é');
    }

    recommendations.forEach(rec => console.log(`‚úÖ ${rec}`));

    console.log('\nüîß –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –≤ puppeteer-solution.js');
    console.log('üí° –ë—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è...');
    console.log('‚ö†Ô∏è  –ó–∞–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –≤—Ä—É—á–Ω—É—é –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ –∏–∑—É—á–µ–Ω–∏–µ');

    // –ù–ï –∑–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    // await browser.close();
    
    return formInfo;
}

// –ó–∞–ø—É—Å–∫ –∏–Ω—Å–ø–µ–∫—Ç–æ—Ä–∞
if (require.main === module) {
    inspectRiskinsStructure().catch(console.error);
}

module.exports = { inspectRiskinsStructure };
