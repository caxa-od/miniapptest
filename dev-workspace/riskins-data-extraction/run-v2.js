/**
 * –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫ —É–ª—É—á—à–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä–∞
 */

const RiskinsDataExtractorV2 = require('./extractor-v2');

async function runV2() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ —É–ª—É—á—à–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä–∞ V2\n');
    
    const extractor = new RiskinsDataExtractorV2({
        headless: false, // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –Ω–∞–±–ª—é–¥–µ–Ω–∏—è
        timeout: 60000
    });
    
    try {
        const result = await extractor.getInsuranceOffers('AA1234AA');
        
        console.log('\n' + '='.repeat(50));
        console.log('üìä –§–ò–ù–ê–õ–¨–ù–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:');
        console.log('='.repeat(50));
        
        if (result.success) {
            console.log('‚úÖ –°—Ç–∞—Ç—É—Å: –£–°–ü–ï–®–ù–û');
            console.log(`üìã –ù–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª—è: ${result.vehicleNumber}`);
            console.log(`üïê –í—Ä–µ–º—è: ${result.timestamp}`);
            console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: ${result.totalOffers}`);
            
            if (result.offers && result.offers.length > 0) {
                console.log('\nüí∞ –ù–ê–ô–î–ï–ù–ù–´–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ò–Ø:');
                result.offers.forEach((offer, index) => {
                    console.log(`\n${index + 1}. ${offer.companyName}`);
                    console.log(`   üíµ –¶–µ–Ω–∞: ${offer.price} ${offer.currency}`);
                    console.log(`   ‚≠ê –†–µ–π—Ç–∏–Ω–≥: ${offer.rating}/5`);
                    console.log(`   üìù –°—Ç–∞—Ç—É—Å: ${offer.status}`);
                    if (offer.debug) {
                        console.log(`   üîç –û—Ç–ª–∞–¥–∫–∞: ${offer.debug.companyElement}`);
                    }
                });
            } else {
                console.log('\n‚ö†Ô∏è  –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –Ω–æ —Ñ–æ—Ä–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!');
                console.log('   –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –∏–ª–∏ –¥—Ä—É–≥–∏–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã');
            }
        } else {
            console.log('‚ùå –°—Ç–∞—Ç—É—Å: –û–®–ò–ë–ö–ê');
            console.log(`üìù –û—à–∏–±–∫–∞: ${result.error}`);
        }
        
        console.log('\n' + '='.repeat(50));
        
    } catch (error) {
        console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    }
}

runV2();
